{"version":3,"sources":["config/index.ts","store/get-stats.ts","store/reducers.ts","store/index.ts","components/search-input/SearchInput.tsx","utils/useOuterClick.ts","components/repo-list/RepoList.tsx","components/chart/Chart.tsx","pages/main-page/MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["EnvEnums","appConfig","development","env","githubToken","test","production","getStats","createSlice","name","initialState","list","reducers","addInitialDataToList","state","action","payload","fullName","initialData","full_name","isLoading","error","setLoading","setError","setStatData","stats","setHover","arr","Object","keys","i","length","hoverState","setHoverOut","setParentHover","hoverOnList","setParentHoverOut","deleteStat","actions","reducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","statsList","persistedReducer","persistReducer","store","configureStore","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","SearchInput","dispatch","useDispatch","useState","searchResults","setSearchResults","query","setQuery","setIsLoading","hideAutoComplete","setHideAutoComplete","inputRef","useRef","innerRef","callback","callbackRef","useEffect","current","document","addEventListener","handleClick","removeEventListener","e","contains","target","useOuterClick","ev","localName","delayedHandleChange","debounce","a","value","fetch","headers","Accept","Authorization","results","json","data","items","handleSelection","props","method","response","console","log","searchGithubStatsHook","color","generateRandomColor","className","onClick","ref","onChange","type","placeholder","size","map","s","id","orgName","split","parts","RegExp","onKeyDown","part","toLowerCase","Math","floor","random","RepoList","useSelector","role","onMouseEnter","onMouseLeave","values","stargazers_count","starCount","updated_at","repoName","updatedAtString","formatDistanceStrict","Date","addSuffix","style","background","kFormatter","num","Intl","NumberFormat","notation","format","labels","options","tension","animation","duration","hover","animationDuration","responsiveAnimationDuration","scaleLineColor","plugins","tooltip","backgroundColor","titleColor","bodyColor","scales","x","grid","display","ticks","y","Chart","datasets","stat","push","week","ini","label","fill","addAlpha","borderColor","j","total","opacity","round","min","max","toString","toUpperCase","MainPage","App","loading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"iNAKYA,E,iJAAAA,K,0BAAAA,E,YAAAA,E,yBAAAA,M,KAMZ,IAoBaC,EAPM,CACjBC,YAd4B,CAC5BC,IAAKH,EAASE,YACdE,YAAa,4CAabC,KAX6B,CAC7BF,IAAKH,EAASK,KACdD,YAAa,4CAUbE,WAR6B,CAC7BH,IAAKH,EAASM,WACdF,YAAa,6CAUgC,WCNzCG,EAAWC,YAAY,CAC3BC,KAAM,eACNC,aAAc,CACZC,KAAM,IAERC,SAAU,CACRC,qBADQ,SACaC,EAAqBC,GACxC,MAIIA,EAAOC,QAHiBC,EAD5B,EACEC,YAAeC,UACfC,EAFF,EAEEA,UACAC,EAHF,EAGEA,MAEFP,EAAMH,KAAKM,GAAYF,EAAOC,QAC9BF,EAAMH,KAAKM,GAAUG,UAAYA,EACjCN,EAAMH,KAAKM,GAAUI,MAAQA,GAE/BC,WAXQ,SAWGR,EAAqBC,GAC9B,IAAME,EAAWF,EAAOC,QACxBF,EAAMH,KAAKM,GAAUG,WAAY,EACjCN,EAAMH,KAAKM,GAAUI,MAAQ,IAE/BE,SAhBQ,SAgBCT,EAAqBC,GAC5B,MAA4BA,EAAOC,QAA3BC,EAAR,EAAQA,SAAUI,EAAlB,EAAkBA,MAClBP,EAAMH,KAAKM,GAAUI,MAAQA,GAE/BG,YAAa,SAACV,EAAqBC,GACjC,MAAuCA,EAAOC,QAAtCS,EAAR,EAAQA,MAAkBR,EAA1B,EAAeE,UACfL,EAAMH,KAAKM,GAAUQ,MAAQA,EAC7BX,EAAMH,KAAKM,GAAUG,WAAY,EACjCN,EAAMH,KAAKM,GAAUI,MAAQ,IAE/BK,SAAU,SAACZ,EAAqBC,GAE9B,IADA,IAAMY,EAAgBC,OAAOC,KAAKf,EAAMH,MAC/BmB,EAAY,EAAGA,EAAIH,EAAII,OAAQD,IACtChB,EAAMH,KAAKgB,EAAIG,IAAIE,YAAa,EAElClB,EAAMH,KAAKI,EAAOC,SAASgB,YAAa,GAE1CC,YAAa,SAACnB,EAAqBC,GACjCD,EAAMH,KAAKI,EAAOC,SAASgB,YAAa,GAE1CE,eAAgB,SAACpB,GACfA,EAAMqB,aAAc,GAEtBC,kBAAmB,SAACtB,GAClBA,EAAMqB,aAAc,GAEtBE,WAAY,SAACvB,EAAqBC,UACzBD,EAAMH,KAAKI,EAAOC,aAKvBsB,EAAqB/B,EAArB+B,QAASC,EAAYhC,EAAZgC,QAGf1B,EASEyB,EATFzB,qBAEAU,GAOEe,EARFhB,WAQEgB,EAPFf,UACAc,EAMEC,EANFD,WACAX,EAKEY,EALFZ,SACAO,EAIEK,EAJFL,YACAC,EAGEI,EAHFJ,eACAE,EAEEE,EAFFF,kBACAZ,EACEc,EADFd,YAIae,ICrFTC,EAAoC,CACxCC,IAAK,OACLC,YACAC,UAAW,CAAC,cAGRC,EAAgDC,YAAgB,CACpEC,cAGWC,EAAsCC,YAAeR,EAAeI,GCb3EK,EAAuBC,YAAe,CAC1CX,QAASQ,EACTI,WAAY,SAACC,GAAD,OACVA,EAAqB,CACnBC,mBAAmB,OAGnBC,EAAuBC,YAAaN,G,oDCG3B,SAASO,IACtB,IAAMC,EAAqBC,cACnBtD,EAAgBH,EAAhBG,YACR,EAA0CuD,mBAAyB,IAAnE,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA0BF,mBAAiB,IAA3C,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAkB,GAApD,mBAAOvC,EAAP,KAAkB4C,EAAlB,KACA,EAAgDL,oBAAkB,GAAlE,mBAAOM,EAAP,KAAyBC,EAAzB,KACMC,EAAWC,iBAAY,MAEvBC,ECtBO,SAAuBC,GACpC,IAAMC,EAAcH,mBACdC,EAAWD,mBAejB,OAZAI,qBAAU,WACRD,EAAYE,QAAUH,KAGxBE,qBAAU,WAER,OADAE,SAASC,iBAAiB,QAASC,GAC5B,kBAAMF,SAASG,oBAAoB,QAASD,IACnD,SAASA,EAAYE,GACfT,EAASI,SAAWF,EAAYE,UAAYJ,EAASI,QAAQM,SAASD,EAAEE,SAAST,EAAYE,QAAQK,MAE1G,IAEIT,EDKUY,EAAc,SAACC,GAEH,SAAvBA,EAAGF,OAAOG,WACZjB,GAAoB,MAIlBkB,EAAsBC,IAAQ,uCAAC,WAAOP,GAAP,mBAAAQ,EAAA,yDACpBxB,EAAUgB,EAAEE,OAAnBO,MACRxB,EAASD,GACJA,KAASA,EAAM/B,OAAS,GAHM,uBAIjC8B,EAAiB,IAJgB,iCAOnCG,GAAa,GACbH,EAAiB,IARkB,SASb2B,MAAM,gDAAD,OAAiD1B,GAAS,CACnF2B,QAAS,CACP,eAAgB,mBAChBC,OAAQ,iCACRC,cAAc,SAAD,OAAWvF,MAbO,cAS7BwF,EAT6B,iBAgBhBA,EAAQC,OAhBQ,QAgB7BC,EAhB6B,OAiBnC9B,GAAa,GACbH,EAAiBiC,EAAKC,OAlBa,4CAAD,sDAmBjC,KAMHvB,qBAAU,WACRN,GAAoB,KACnB,CAACJ,IAEJ,IAAMkC,EAAkB,SAACF,GACvBrC,EHkCiC,SAACwC,GACpC,IAAQhF,EAAagF,EAAbhF,SACR,8CAAO,WAAOwC,GAAP,iBAAA6B,EAAA,sEAEH7B,EAAS5C,EAAqB,eAAKoF,KAFhC,SAIoBT,MAAM,gCAAD,OAAiCvE,EAAjC,0BAAmE,CAC7FiF,OAAQ,MACRT,QAAS,CACP,eAAgB,mBAChBC,OAAQ,iCACRC,cAAc,SAAD,OAAW1F,EAAUG,gBATnC,cAIG+F,EAJH,gBAYgBA,EAASN,OAZzB,OAYGC,EAZH,OAaHrC,EAASjC,EAAY,CAAEC,MAAOqE,EAAM3E,UAAWF,KAb5C,kDAeHmF,QAAQC,IAAR,MACA5C,EAASlC,EAAS,CAAEN,WAAUI,MAAO,yCAhBlC,0DAAP,sDGnCIiF,CAAsB,CACpBrF,SAAU6E,EAAK3E,UACfD,YAAa4E,EACb1E,WAAW,EACXC,MAAO,GACPI,MAAO,GACP8E,MAAOC,IACPxE,YAAY,KAGZmC,GAAYA,EAASM,UACvBN,EAASM,QAAQc,MAAQ,IAG3BxB,EAAS,KAGX,OACE,mCACE,sBAAK0C,UAAW,0BAAhB,UACE,uBACEC,QAAS,WACPxC,GAAoB,IAEtByC,IAAKxC,EACLyC,SAnCc,SAAC9B,GACrBM,EAAoBN,IAmCd+B,KAAK,OACLC,YAAa,kCAEf,qBAAKL,UAAW,oBAAhB,SACE,cAAC,IAAD,CAAUM,KAAM,WAElB,sBAAKN,UAAW,sBAAhB,UACGrF,GAAa,qBAAKqF,UAAW,oCAAhB,yBACZrF,GAAa0C,IAAsB,OAAbF,QAAa,IAAbA,OAAA,EAAAA,EAAe7B,QAAS,IAAMkC,GACpD,mCACE,qBAAKwC,UAAW,gBAAhB,SACG7C,EAAcoD,KAAI,SAACC,EAAGnF,GACrB,IAAQX,EAAkB8F,EAAlB9F,UAAW+F,EAAOD,EAAPC,GACbC,EAAUhG,EAAUiG,MAAM,KAAK,GAE/BC,EADWlG,EAAUiG,MAAM,KAAK,GACfA,MAAM,IAAIE,OAAJ,WAAexD,EAAf,KAAyB,OACtD,OACE,yBAEE2C,UAAW,0BACXE,IAAKtC,EACLqC,QAAS,WACPV,EAAgBiB,IAElBM,UAAW,WACTvB,EAAgBiB,IARpB,UAWE,mBAAGR,UAAW,YAAd,SAA4BU,IAC5B,sBAAMV,UAAW,iBAAjB,eACA,sBAAMA,UAAW,kBAAjB,SACGY,EAAML,KAAI,SAACQ,EAAM1F,GAAP,OACT0F,EAAKC,gBAAkB3D,EAAM2D,cAAgB,4BAAYD,GAAJ1F,GAAgB0F,SAf3E,UACUN,EADV,YACgBpF,mBA6BpC,SAAS0E,IAGP,IAFA,IACID,EAAQ,IACHzE,EAAI,EAAGA,EAAI,EAAGA,IACrByE,GAHc,mBAGGmB,KAAKC,MAAsB,GAAhBD,KAAKE,WAEnC,OAAOrB,E,0BEnIM,SAASsB,IACtB,MAAmCC,aAAY,SAAChH,GAAD,OAAmBA,EAAMgC,aAAxE,IAAQnC,YAAR,MAAe,GAAf,EAAmBwB,EAAnB,EAAmBA,YACbsB,EAAqBC,cAiB3B,OACE,mCACE,sBACE+C,UAAW,kBACXsB,KAAK,eACLC,aAAc,WAblBvE,EAASvB,MAgBL+F,aAAc,WAblBxE,EAASrB,MAOP,UAUGR,OAAOsG,OAAOvH,GAAMoB,OAAS,GAC5B,mCACGH,OAAOsG,OAAOvH,GAAMqG,KAAI,SAAClB,GACxB,IAAQ5E,EAA8C4E,EAA9C5E,YAAaqF,EAAiCT,EAAjCS,MAAkBvE,GAAe8D,EAA1B1E,UAA0B0E,EAAf9D,YACpBf,EAA0DC,EAArEC,UAAR,EAA6ED,EAAhDiH,iBAAkBC,OAA/C,MAA2D,EAA3D,EAA8DC,EAAenH,EAAfmH,WACxDlB,EAAUlG,EAASmG,MAAM,KAAK,GAC9BkB,EAAWrH,EAASmG,MAAM,KAAK,GAC/BmB,EAA0BC,YAAqB,IAAIC,KAAKJ,GAAa,IAAII,KAAQ,CACrFC,WAAW,IAEb,OACE,wBACEjC,UAAS,yCAAoCtE,GAAeH,EAAa,UAAY,GAA5E,YACPG,IAAgBH,EAAa,SAAW,IAE1CgG,aAAc,WAzC5BvE,EAAS/B,EA0CqBT,KAEhBgH,aAAc,WAzC5BxE,EAASxB,EA0CsBhB,KAGjB0H,MAAO,CAAEC,WAAYrC,GAXvB,SAaE,qBAAKE,UAAW,oBAAhB,SACE,sBACEA,UAAS,wFADX,UAGE,sBAAKA,UAAW,mBAAhB,UACE,sBAAKA,UAAW,OAAhB,UACE,mBAAGA,UAAW,OAAd,SAAuBU,IACvB,sBAAMV,UAAW,OAAjB,eACA,mBAAGA,UAAW,6BAAd,SAA6C6B,OAE/C,sBAAK7B,UAAW,YAAhB,UACE,qBAAKA,UAAW,OAAhB,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAW,aAAhB,SACE,4BAAIoC,EAAWT,OAEjB,sBAAK3B,UAAW,OAAhB,qBAAiC8B,WAGrC,qBAAK9B,UAAW,+CAAhB,SACE,qBACEC,QAAS,WA5D/BjD,EAASpB,EA6D4BpB,KAEf8G,KAAM,eACNtB,UAAW,gCALb,SAOE,cAAC,IAAD,CAAUM,KAAM,mBA/BnB9F,QAyCiB,IAA/BW,OAAOsG,OAAOvH,GAAMoB,QACnB,sBAAK0E,UAAW,iCAAhB,UACE,qBAAKA,UAAW,8BAAhB,SACE,cAAC,IAAD,CAAUM,KAAM,WAElB,qBAAKN,UAAW,8DAAhB,SACE,2FASd,SAASoC,EAAWC,GAElB,OADgBC,KAAKC,aAAa,KAAM,CAAEC,SAAU,YACnCC,OAAOJ,G,oBClHpBhD,EAAY,CAChBqD,OAAQ,GACRrD,KAAM,IAGFsD,EAAU,CACdC,QAAS,GACTC,UAAW,CACTC,SAAU,GAEZC,MAAO,CACLC,kBAAmB,GAErBC,4BAA6B,EAC7BC,eAAgB,MAChBC,QAAS,CACPC,QAAS,CACPC,gBAAiB,QACjBC,WAAY,QACZC,UAAW,UAIfC,OAAQ,CACNC,EAAG,CACDC,KAAM,CACJC,SAAS,GAEXC,MAAO,CACLD,SAAS,IAGbE,EAAG,CACDH,KAAM,CACJC,SAAS,GAEXC,MAAO,MAOE,SAASE,IACtB,MAAmCzC,aAAY,SAAChH,GAAD,OAAmBA,EAAMgC,aAAxE,IAAQnC,YAAR,MAAe,GAAf,EAAmBwB,EAAnB,EAAmBA,YACbgH,EAAgB,GAChBqB,EAAkB,GAClB/I,EAAQG,OAAOsG,OAAOvH,GAE5B,IAAKc,EAAMM,OACT,OAAO,6BAGT,IAAK,IAAID,EAAY,EAAGA,EAAIL,EAAM,GAAGA,MAAMM,OAAQD,IAAK,CACtD,IAAM2I,EAAOhJ,EAAM,GAAGA,MAAMK,GAC5BqH,EAAOuB,KAAP,kBAAuBxB,YAAmB,IAAZuB,EAAKE,KAAa,kBAElD7E,EAAKqD,OAASA,EAEd,IAAK,IAAIrH,EAAY,EAAGA,EAAIL,EAAMM,OAAQD,IAAK,CAU7C,IATA,IAAM2I,EAAOhJ,EAAMK,GACXE,EAAeyI,EAAfzI,WACF4I,EAAW,CACfC,MAAOJ,EAAKvJ,YAAYC,UACxB2E,KAAM,GACNgF,MAAM,EACNhB,gBAA8CiB,EAASN,EAAKlE,MAA3CpE,IAAgBH,EAAkC,GAA4B,GAC/FgJ,YAA0CD,EAASN,EAAKlE,MAA3CpE,IAAgBH,EAAkC,GAA4B,IAEpFiJ,EAAY,EAAGA,EAAIR,EAAKhJ,MAAMM,OAAQkJ,IAC7CL,EAAI9E,KAAK4E,KAAKD,EAAKhJ,MAAMwJ,GAAGC,OAE9BV,EAASE,KAAKE,GAGhB,OADA9E,EAAK0E,SAAWA,EAEd,mCACE,qBAA8B/D,UAAW,qBAAzC,SACE,cAAC,IAAD,CAAMX,KAAMA,EAAMsD,QAASA,KAD7B,UAAa1B,KAAKE,aAOxB,SAASmD,EAASxE,EAAe4E,GAG/B,OAAO5E,EADUmB,KAAK0D,MAA+C,IAAzC1D,KAAK2D,IAAI3D,KAAK4D,IAAIH,GAAW,EAAG,GAAI,IACxCI,SAAS,IAAIC,cCvFxB,SAASC,IACtB,OACE,sBAAKhF,UAAW,kBAAhB,UACE,yBAASA,UAAW,eAApB,SACE,qBAAKA,UAAW,sCAAhB,SACE,cAAC8D,EAAD,QAGJ,uBAAO9D,UAAW,UAAlB,SACE,sBAAKA,UAAW,OAAhB,UAEE,qBAAKA,UAAW,qBAAhB,SACE,cAAC,EAAD,MAGF,cAAC,EAAD,YCdK,SAASiF,KACtB,OACE,cAAC,IAAD,CAAUzI,MAAOA,EAAjB,SACE,cAAC,IAAD,CAAa0I,QAAS,KAAMrI,UAAWA,EAAvC,SACE,cAAC,EAAD,QCTR,IAYesI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEF7H,SAAS8H,eAAe,SAM1BZ,M","file":"static/js/main.8be84251.chunk.js","sourcesContent":["export type ConfigType = {\n  env: EnvEnums;\n  githubToken: string;\n};\n\nexport enum EnvEnums {\n  development = 'development',\n  test = 'test',\n  production = 'production',\n}\n\nconst devConfig: ConfigType = {\n  env: EnvEnums.development,\n  githubToken: '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',\n};\nconst testConfig: ConfigType = {\n  env: EnvEnums.test,\n  githubToken: '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',\n};\nconst liveConfig: ConfigType = {\n  env: EnvEnums.production,\n  githubToken: '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',\n};\n\nconst allEnvCong = {\n  development: devConfig,\n  test: testConfig,\n  production: liveConfig,\n};\n\n// for app internal use envs\nexport const appConfig: ConfigType = allEnvCong[process.env.NODE_ENV];\n","import { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit';\nimport { appConfig } from '../config';\n\nexport interface IRepoData {\n  initialData: any;\n  fullName: string;\n  isLoading: boolean;\n  error?: string;\n  stats: any[];\n  color: string;\n  hoverState: boolean;\n}\n\nexport interface IStatsResult {\n  list: {\n    [name: string]: IRepoData;\n  };\n  hoverOnList?: boolean;\n}\nexport interface IGithubStatsResponse {\n  total: number;\n  week: number;\n  days: number[];\n}\n\nconst getStats = createSlice({\n  name: 'githubSearch',\n  initialState: {\n    list: {},\n  },\n  reducers: {\n    addInitialDataToList(state: IStatsResult, action: PayloadAction<IRepoData>) {\n      const {\n        initialData: { full_name: fullName },\n        isLoading,\n        error,\n      } = action.payload;\n      state.list[fullName] = action.payload;\n      state.list[fullName].isLoading = isLoading;\n      state.list[fullName].error = error;\n    },\n    setLoading(state: IStatsResult, action: PayloadAction<string>) {\n      const fullName = action.payload;\n      state.list[fullName].isLoading = false;\n      state.list[fullName].error = '';\n    },\n    setError(state: IStatsResult, action: PayloadAction<{ fullName: string; error: string }>) {\n      const { fullName, error } = action.payload;\n      state.list[fullName].error = error;\n    },\n    setStatData: (state: IStatsResult, action: PayloadAction<{ stats: any; full_name: string }>) => {\n      const { stats, full_name: fullName } = action.payload;\n      state.list[fullName].stats = stats;\n      state.list[fullName].isLoading = false;\n      state.list[fullName].error = '';\n    },\n    setHover: (state: IStatsResult, action: PayloadAction<string>) => {\n      const arr: string[] = Object.keys(state.list);\n      for (let i: number = 0; i < arr.length; i++) {\n        state.list[arr[i]].hoverState = false;\n      }\n      state.list[action.payload].hoverState = true;\n    },\n    setHoverOut: (state: IStatsResult, action: PayloadAction<string>) => {\n      state.list[action.payload].hoverState = false;\n    },\n    setParentHover: (state: IStatsResult) => {\n      state.hoverOnList = true;\n    },\n    setParentHoverOut: (state: IStatsResult) => {\n      state.hoverOnList = false;\n    },\n    deleteStat: (state: IStatsResult, action: PayloadAction<string>) => {\n      delete state.list[action.payload];\n    },\n  },\n});\n\nconst { actions, reducer } = getStats;\n\nexport const {\n  addInitialDataToList,\n  setLoading,\n  setError,\n  deleteStat,\n  setHover,\n  setHoverOut,\n  setParentHover,\n  setParentHoverOut,\n  setStatData,\n} = actions;\n\n// to register in store\nexport default reducer;\n\nexport const searchGithubStatsHook = (props: IRepoData): any => {\n  const { fullName } = props;\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(addInitialDataToList({ ...props }));\n\n      const response = await fetch(`https://api.github.com/repos/${fullName}/stats/commit_activity`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          Accept: 'application/vnd.github.v3+json',\n          Authorization: `token ${appConfig.githubToken}`,\n        },\n      });\n      const data = await response.json();\n      dispatch(setStatData({ stats: data, full_name: fullName }));\n    } catch (error) {\n      console.log(error);\n      dispatch(setError({ fullName, error: 'Some server/network error happened.' }));\n    }\n  };\n};\n","import { CombinedState, combineReducers } from 'redux';\nimport { Reducer } from 'react';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistConfig } from 'redux-persist/es/types';\n\nimport statsList from './get-stats';\n\nconst persistConfig: PersistConfig<any> = {\n  key: 'root',\n  storage,\n  whitelist: ['statsList'],\n};\n\nconst rootReducer: Reducer<CombinedState<any>, any> = combineReducers({\n  statsList,\n});\n\nexport const persistedReducer: Reducer<any, any> = persistReducer(persistConfig, rootReducer);\n","import { configureStore, EnhancedStore } from '@reduxjs/toolkit';\nimport { persistStore } from 'redux-persist';\nimport { Persistor } from 'redux-persist/es/types';\nimport { persistedReducer } from './reducers';\n\nconst store: EnhancedStore = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n});\nconst persistor: Persistor = persistStore(store);\nexport { store, persistor };\n","import React, { ChangeEvent, ReactElement, useEffect, useRef, useState } from 'react';\nimport { FiSearch } from 'react-icons/fi';\nimport './SearchInput.scss';\nimport debounce from 'lodash/debounce';\nimport { appConfig } from '../../config';\nimport useOuterClick from '../../utils/useOuterClick';\nimport { useDispatch } from 'react-redux';\nimport { Dispatch } from 'redux';\nimport { addInitialDataToList, searchGithubStatsHook } from '../../store/get-stats';\n\ntype searchResult = {\n  full_name: string;\n  id: number;\n};\n\nexport default function SearchInput(): ReactElement {\n  const dispatch: Dispatch = useDispatch();\n  const { githubToken } = appConfig;\n  const [searchResults, setSearchResults] = useState<searchResult[]>([]);\n  const [query, setQuery] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [hideAutoComplete, setHideAutoComplete] = useState<boolean>(false);\n  const inputRef = useRef<any>(null);\n\n  const innerRef = useOuterClick((ev: any) => {\n    /*event handler code on outer click*/\n    if (ev.target.localName != 'input') {\n      setHideAutoComplete(true);\n    }\n  });\n\n  const delayedHandleChange = debounce(async (e: ChangeEvent<HTMLInputElement>) => {\n    const { value: query } = e.target;\n    setQuery(query);\n    if (!query || query.length < 3) {\n      setSearchResults([]);\n      return;\n    }\n    setIsLoading(true);\n    setSearchResults([]);\n    const results = await fetch(`https://api.github.com/search/repositories?q=${query}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/vnd.github.v3+json',\n        Authorization: `token ${githubToken}`,\n      },\n    });\n    const data = await results.json();\n    setIsLoading(false);\n    setSearchResults(data.items);\n  }, 400);\n\n  const onInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    delayedHandleChange(e);\n  };\n\n  useEffect(() => {\n    setHideAutoComplete(false);\n  }, [query]);\n\n  const handleSelection = (data: searchResult) => {\n    dispatch(\n      searchGithubStatsHook({\n        fullName: data.full_name,\n        initialData: data,\n        isLoading: true,\n        error: '',\n        stats: [],\n        color: generateRandomColor(),\n        hoverState: false,\n      })\n    );\n    if (inputRef && inputRef.current) {\n      inputRef.current.value = '';\n    }\n\n    setQuery('');\n  };\n\n  return (\n    <>\n      <div className={'searchInputInnerWrapper'}>\n        <input\n          onClick={() => {\n            setHideAutoComplete(false);\n          }}\n          ref={inputRef}\n          onChange={onInputChange}\n          type='text'\n          placeholder={'Search a Github Repository...'}\n        />\n        <div className={'iconWrapper px-12'}>\n          <FiSearch size={'18px'} />\n        </div>\n        <div className={'autocompleteWrapper'}>\n          {isLoading && <div className={'flex justify-content-center py-20'}>loading...</div>}\n          {!isLoading && query && searchResults?.length > 0 && !hideAutoComplete && (\n            <>\n              <div className={'buttonWrapper'}>\n                {searchResults.map((s, i) => {\n                  const { full_name, id } = s;\n                  const orgName = full_name.split('/')[0];\n                  const repoName = full_name.split('/')[1];\n                  const parts = repoName.split(new RegExp(`(${query})`, 'gi'));\n                  return (\n                    <button\n                      key={`${id}-${i}`}\n                      className={'flex align-items-center'}\n                      ref={innerRef}\n                      onClick={() => {\n                        handleSelection(s);\n                      }}\n                      onKeyDown={() => {\n                        handleSelection(s);\n                      }}\n                    >\n                      <p className={'text-gray'}>{orgName}</p>\n                      <span className={'mx-2 text-gray'}>/</span>\n                      <span className={'specialTruncate'}>\n                        {parts.map((part, i) =>\n                          part.toLowerCase() === query.toLowerCase() ? <b key={i}>{part}</b> : part\n                        )}\n                      </span>\n                    </button>\n                  );\n                })}\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </>\n  );\n}\n\nfunction generateRandomColor(): string {\n  const letters = '0123456789ABCDEF';\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n","import React, { useEffect, useRef } from 'react';\n\nexport default function useOuterClick(callback: any) {\n  const callbackRef = useRef<any>(); // initialize mutable ref, which stores callback\n  const innerRef = useRef<any>(); // returned to client, who marks \"border\" element\n\n  // update cb on each render, so second useEffect has access to current value\n  useEffect(() => {\n    callbackRef.current = callback;\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClick);\n    return () => document.removeEventListener('click', handleClick);\n    function handleClick(e: any) {\n      if (innerRef.current && callbackRef.current && !innerRef.current.contains(e.target)) callbackRef.current(e);\n    }\n  }, []); // no dependencies -> stable click listener\n\n  return innerRef; // convenience for client (doesn't need to init ref himself)\n}\n","import React, { ReactElement } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IState } from '../../store/store-types';\nimport { FiSearch } from 'react-icons/fi';\nimport './RepoList.scss';\nimport { FiStar, FiTrash2 } from 'react-icons/fi';\nimport formatDistanceStrict from 'date-fns/formatDistanceStrict';\nimport { Dispatch } from 'redux';\nimport { deleteStat, setHover, setHoverOut, setParentHover, setParentHoverOut } from '../../store/get-stats';\n\nexport default function RepoList(): ReactElement {\n  const { list = [], hoverOnList } = useSelector((state: IState) => state.statsList);\n  const dispatch: Dispatch = useDispatch();\n\n  const handleMouseIn = (name: string) => {\n    dispatch(setHover(name));\n  };\n  const handleMouseOut = (name: string) => {\n    dispatch(setHoverOut(name));\n  };\n  const handleParentMouseIn = () => {\n    dispatch(setParentHover());\n  };\n  const handleParentMouseOut = () => {\n    dispatch(setParentHoverOut());\n  };\n  const handleDelete = (name: string) => {\n    dispatch(deleteStat(name));\n  };\n  return (\n    <>\n      <div\n        className={'repoListWrapper'}\n        role='presentation'\n        onMouseEnter={() => {\n          handleParentMouseIn();\n        }}\n        onMouseLeave={() => {\n          handleParentMouseOut();\n        }}\n      >\n        {Object.values(list).length > 0 && (\n          <>\n            {Object.values(list).map((data) => {\n              const { initialData, color, isLoading, hoverState } = data;\n              const { full_name: fullName, stargazers_count: starCount = 0, updated_at } = initialData;\n              const orgName = fullName.split('/')[0];\n              const repoName = fullName.split('/')[1];\n              const updatedAtString: string = formatDistanceStrict(new Date(updated_at), new Date(), {\n                addSuffix: true,\n              });\n              return (\n                <button\n                  className={`coloredBg my-15 cursor-pointer ${hoverOnList && hoverState ? 'hovered' : ''} ${\n                    hoverOnList && !hoverState ? 'dimmed' : ''\n                  }`}\n                  onMouseEnter={() => {\n                    handleMouseIn(fullName);\n                  }}\n                  onMouseLeave={() => {\n                    handleMouseOut(fullName);\n                  }}\n                  key={fullName}\n                  style={{ background: color }}\n                >\n                  <div className={'repoWrapper w-100'}>\n                    <div\n                      className={`flex w-100 repoButton justify-content-space-between align-items-center cursor-pointer`}\n                    >\n                      <div className={'flex flex-column'}>\n                        <div className={'flex'}>\n                          <p className={' m-0'}>{orgName}</p>\n                          <span className={'mx-2'}>/</span>\n                          <b className={'specialTruncate text-white'}>{repoName}</b>\n                        </div>\n                        <div className={'flex mt-6'}>\n                          <div className={'mr-2'}>\n                            <FiStar />\n                          </div>\n                          <div className={'text-white'}>\n                            <b>{kFormatter(starCount)}</b>\n                          </div>\n                          <div className={'mx-5'}>Updated {updatedAtString}</div>\n                        </div>\n                      </div>\n                      <div className={'flex justify-items-center align-items-center'}>\n                        <div\n                          onClick={() => {\n                            handleDelete(fullName);\n                          }}\n                          role={'presentation'}\n                          className={'noButtonStyles cursor-pointer'}\n                        >\n                          <FiTrash2 size={'18px'} />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </button>\n              );\n            })}\n          </>\n        )}\n        {Object.values(list).length === 0 && (\n          <div className={'emptyResultWrapper py-40 mt-20'}>\n            <div className={'flex justify-content-center'}>\n              <FiSearch size={'40px'} />\n            </div>\n            <div className={'flex justify-content-center textWrapper mx-auto text-center'}>\n              <p>Search for a GitHub repository to populate graph</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction kFormatter(num: number): string {\n  let formatter = Intl.NumberFormat('en', { notation: 'compact' });\n  return formatter.format(num);\n}\n","import React, { ReactElement, useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { IState } from '../../store/store-types';\nimport format from 'date-fns/format';\n\nconst data: any = {\n  labels: [],\n  data: [],\n};\n\nconst options = {\n  tension: 0.3,\n  animation: {\n    duration: 0, // general animation time\n  },\n  hover: {\n    animationDuration: 0, // duration of animations when hovering an item\n  },\n  responsiveAnimationDuration: 0,\n  scaleLineColor: 'red',\n  plugins: {\n    tooltip: {\n      backgroundColor: 'white',\n      titleColor: 'black',\n      bodyColor: 'black',\n    },\n  },\n\n  scales: {\n    x: {\n      grid: {\n        display: false,\n      },\n      ticks: {\n        display: false,\n      },\n    },\n    y: {\n      grid: {\n        display: false,\n      },\n      ticks: {\n        // display: false,\n      },\n    },\n  },\n};\n\nexport default function Chart(): ReactElement {\n  const { list = {}, hoverOnList } = useSelector((state: IState) => state.statsList);\n  const labels: any[] = [];\n  const datasets: any[] = [];\n  const stats = Object.values(list);\n\n  if (!stats.length) {\n    return <></>;\n  }\n\n  for (let i: number = 0; i < stats[0].stats.length; i++) {\n    const stat = stats[0].stats[i];\n    labels.push(`week of ${format(stat.week * 1000, 'MMM dd, yyyy')}`);\n  }\n  data.labels = labels;\n\n  for (let i: number = 0; i < stats.length; i++) {\n    const stat = stats[i];\n    const { hoverState } = stat;\n    const ini: any = {\n      label: stat.initialData.full_name,\n      data: [],\n      fill: false,\n      backgroundColor: hoverOnList && !hoverState ? addAlpha(stat.color, 0.1) : addAlpha(stat.color, 1),\n      borderColor: hoverOnList && !hoverState ? addAlpha(stat.color, 0.1) : addAlpha(stat.color, 1),\n    };\n    for (let j: number = 0; j < stat.stats.length; j++) {\n      ini.data.push(stat.stats[j].total);\n    }\n    datasets.push(ini);\n  }\n  data.datasets = datasets;\n  return (\n    <>\n      <div key={`${Math.random()}`} className={'chartWrapper w-100'}>\n        <Line data={data} options={options} />\n      </div>\n    </>\n  );\n}\n\nfunction addAlpha(color: string, opacity: number): string {\n  // coerce values so ti is between 0 and 1.\n  const _opacity = Math.round(Math.min(Math.max(opacity || 1, 0), 1) * 255);\n  return color + _opacity.toString(16).toUpperCase();\n}\n","import React, { ReactElement } from 'react';\nimport SearchInput from '../../components/search-input/SearchInput';\nimport './MainPage.scss';\nimport RepoList from '../../components/repo-list/RepoList';\nimport Chart from '../../components/chart/Chart';\n\nexport default function MainPage(): ReactElement {\n  return (\n    <div className={'mainPageWrapper'}>\n      <section className={'graphWrapper'}>\n        <div className={'flex w-100 align-items-center h-100'}>\n          <Chart />\n        </div>\n      </section>\n      <aside className={'sideBar'}>\n        <div className={'p-20'}>\n          {/* input  */}\n          <div className={'searchInputWrapper'}>\n            <SearchInput />\n          </div>\n\n          <RepoList />\n        </div>\n      </aside>\n    </div>\n  );\n}\n","import React, { ReactElement } from 'react';\nimport './App.scss';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistor, store } from './store';\nimport MainPage from './pages/main-page/MainPage';\n\nexport default function App(): ReactElement {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <MainPage />\n      </PersistGate>\n    </Provider>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}